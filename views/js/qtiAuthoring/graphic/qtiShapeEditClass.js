qtiShapesEditClass = function(canvasIdentifier){	if(!Raphael){		throw 'The raphael graphic library is required.';	}		$canvas = $('#'+canvasIdentifier);	if(!$canvas.length){		throw 'The canvas dom ellement not found.';	}	$canvas.css('border', '5px solid red');		this.canvas = Raphael(canvasIdentifier, 500, 500);	this.shape = 'circle';	this._shapeObj = null;		this.startPoint = null;	this.endPoint = null;	// var paper = Raphael("qtiCanvas", 500, 500);	// var circle = this.canvas.circle(50, 50, 40);	// var rect = this.canvas.rect(10, 10, 50, 50);		var self = this;	var canvas = this.canvas;	var _shapeObj = this._shapeObj;		$canvas.mousedown(function(e){		CL('down');		if(self.shape){			self.focused = true;			self.startPoint = {				x : e.pageX - this.offsetLeft,				y : e.pageY - this.offsetTop			};						self.removeShapeObj();		}	});		$canvas.mousemove(function(e){		if(self.focused && self.startPoint){			if(self.shape){								var position = {					x : e.pageX - this.offsetLeft,					y : e.pageY - this.offsetTop				};								var sqrt = Math.sqrt(Math.pow(position.x-self.startPoint.x, 2)+Math.pow(position.y-self.startPoint.y, 2))				if(canvas[self.shape]){					// CL('position', position);					// CL('start', self.startPoint);					// CL('sqrt', sqrt);										self.setShapeObj(canvas[self.shape](self.startPoint.x, self.startPoint.y, sqrt));				}							}		}	});		$canvas.mouseup(function(e){		CL('up');		self.focused = false;	});		this.removeShapeObj = function(){		if(this._shapeObj){			if(this._shapeObj.remove){				this._shapeObj.remove();			}			this._shapeObj = null;		}	}		this.setShapeObj = function(shapeObj){		this.removeShapeObj();		this._shapeObj = shapeObj;	}}qtiShapesEditClass.prototype.setCurrentShape = function(shape){	this.shape = shape;}